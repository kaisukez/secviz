{"version":3,"sources":["variables/dashboardVar.js","containers/styled/DashboardFrame.js","components/styled/Navbar.js","components/styled/Brand.js","components/Navbar.js","components/styled/Sidebar.js","components/Sidebar.js","variables/screenSize.js","components/styled/LoginActivityFrame.js","get-data/login-activity/getUserData.js","get-data/login-activity/getLoginLogoutData.js","get-data/login-activity/getIpTypeData.js","get-data/login-activity/getIpRatioData.js","get-data/login-activity/getLoginActivityData.js","get-data/login-activity/getServerDistributionData.js","components/LoginActivity.js","components/styled/GraphFrame.js","get-data/internet-graph/getInternationalGraphData.js","components/InternationalGraph.js","get-data/internet-graph/getDomesticGraphData.js","components/DomesticGraph.js","components/styled/SuspectedUserFrame.js","get-data/web-log/getRequestPerMinuteData.js","components/styled/TimelineConnectivityFrame.js","get-data/web-log/getTimelineData.js","components/styled/MostRequestFrame.js","containers/Dashboard.js","App.js","registerServiceWorker.js","index.js"],"names":["dashboardVar","navbarHeightInt","navbarHeight","sidebarWidthInt","sidebarWidth","DashboardFrame","styled","div","_templateObject","Navbar","Navbar_templateObject","Brand","h2","Brand_templateObject","components_Navbar","props","react_default","a","createElement","styled_Navbar","styled_Brand","Sidebar","Sidebar_templateObject","Navigator","components_Sidebar_templateObject","active","SubNavigator","_templateObject2","SubNavigatorWrapper","_templateObject3","display","concat","isActive","page","matchingString","components_Sidebar","styled_Sidebar","onClick","changePage","domesticGraphType","changeDomesticGraphType","internationalGraphType","changeInternationalGraphType","screenSize","smallInt","small","mediumInt","medium","suspectedUserBreakPointInt","suspectedUserBreakPoint","LoginActivityFrame","LoginActivityFrame_templateObject","dateList","userTimeSeries","map","item","valueList","getUserData","title","left","text","tooltip","trigger","visualMap","show","type","seriesIndex","min","max","inRange","color","xAxis","data","yAxis","series","loginLogoutTimeSeries","loginValueList","logoutValueList","getLoginLogoutData","legend","name","icon","top","stack","areaStyle","normal","ipTypeTimeSeries","ipv4ValueList","ipv6ValueList","dualStackValueList","getIpTypeData","ipv4Value","ipRatio","ipv4","ipv6Value","ipv6","dualStackValue","dualStack","getIpRatioData","radius","value","loginValue","loginActivity","login","reLoginValue","reLogin","logoutValue","logout","timeoutValue","timeout","getLoginActivityData","getServerDistributionData","serverDistribution","ActiveUserFormat","LoginActivity_templateObject","IpTypeFormat","LoginActivity_templateObject2","LoginLogoutFormat","LoginActivity_templateObject3","IpRatioFormat","_templateObject4","LoginActivityFormat","_templateObject5","ServerDistributionFormat","_templateObject6","calWidthIpTypeIpLoginLogout","windowWidth","adjustedWidth","calWidthIpRatioLoginActivity","calWidthServerDistribution","LoginActivity","styled_LoginActivityFrame","lib_default","option","style","height","width","GraphFrame","GraphFrame_templateObject","category_from_isp_type","ISP-Inter","ISP-Local","ISP-Govt","IIG","categories_list","itemStyle","getInternationalGraphData","graphType","animationDurationUpdate","animationEasingUpdate","layout","draggable","categories","InternationalExchage","nodes","node","x","y","id","category","ispType","symbolSize","size","colorByType","edges","edge","source","sourceID","target","targetID","lineStyle","Number","Math","pow","label","emphasis","position","roam","focusNodeAdjacency","curveness","opacity","force","repulsion","InternationalGraph","styled_GraphFrame","NIX","getDomesticGraphData","DomesticExchage","DomesticGraph","SuspectedUserFrame_templateObject","requestPerMinute","TimelineConnectivityFrame_templateObject","user_count","ip_source_count","ip_destination_count","hostname_count","timeline","forEach","user","ip_source","ip_destination","hostname","user_count_array","ip_source_count_array","ip_destination_count_array","hostname_count_array","push","sorted_user_count_array","sort","b","sorted_ip_source_count_array","sorted_ip_destination_count_array","sorted_hostname_count_array","uniqUsername","slice","uniqIpSource","uniqIpDestination","uniqHostname","console","log","arrayToObject","array","object","username_dictionary","ip_source_dictionary","ip_destination_dictionary","hostname_dictionary","time","username","ipSource","ipDestination","port","String","Object","toConsumableArray","Set","MostRequestFrame_templateObject","Dashboard","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateWidth","window","innerWidth","innerHeight","setState","changeWebLogSector","sector","webLogSector","renderPage","state","components_DomesticGraph","components_InternationalGraph","components_LoginActivity","addEventListener","removeEventListener","styled_DashboardFrame","Component","App","containers_Dashboard","isLocalhost","Boolean","location","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dce0daed.chunk.js","sourcesContent":["const navbarHeightInt = 60\r\nconst navbarHeight = navbarHeightInt + 'px'\r\n\r\nconst sidebarWidthInt = 250\r\nconst sidebarWidth = sidebarWidthInt + 'px'\r\n\r\nexport default {\r\n  navbarHeightInt, navbarHeight,\r\n  sidebarWidthInt, sidebarWidth\r\n}\r\n","import styled from 'styled-components'\r\nimport dashboardVar from '../../variables/dashboardVar'\r\n\r\nconst DashboardFrame = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${ dashboardVar.sidebarWidth } auto;\r\n  grid-template-rows: ${ dashboardVar.navbarHeight } auto;\r\n  height: 100vh;\r\n`\r\n\r\nexport default DashboardFrame\r\n","import styled from 'styled-components'\r\n\r\nimport dashboardVar from '../../variables/dashboardVar'\r\n\r\nconst Navbar = styled.div`\r\n  background-color: #23B5D3;\r\n  width: 100%;\r\n  ${'' /* height: 100%; */}\r\n  grid-column-start: 1;\r\n  grid-column-end: 3;\r\n  grid-row-start: 1;\r\n  grid-row-end: 2;\r\n\r\n  position: fixed;\r\n  height: ${ dashboardVar.navbarHeight };\r\n  z-index: 1;\r\n`\r\n\r\nexport default Navbar\r\n","import styled from 'styled-components'\r\n\r\nconst Brand = styled.h2`\r\n  text-transform: uppercase;\r\n  padding-left: 20px;\r\n  color: white;\r\n  font-size: 18px;\r\n  line-height: 60px;\r\n  margin: 0;\r\n`\r\n\r\nexport default Brand\r\n","import React from 'react'\r\n\r\nimport StyledNavbar from './styled/Navbar'\r\nimport Brand from './styled/Brand'\r\n\r\nexport default (props) => {\r\n  return (\r\n    <StyledNavbar>\r\n      <Brand>secviz</Brand>\r\n    </StyledNavbar>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nimport dashboardVar from '../../variables/dashboardVar'\r\n\r\nconst Sidebar = styled.div`\r\n  background-color: #D6F0FF;\r\n  ${'' /* width: 100%; */}\r\n  height: 100%;\r\n  grid-column-start: 1;\r\n  grid-column-end: 2;\r\n\r\n  position: fixed;\r\n  width: ${ dashboardVar.sidebarWidth };\r\n  top: ${ dashboardVar.navbarHeight };\r\n`\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport StyledSidebar from './styled/Sidebar'\r\n\r\nimport dashboardVar from '../variables/dashboardVar'\r\n\r\nconst Navigator = styled.div`\r\n  background-color: ${ props => props.active ? '#F7FCFF' : '#D6F0FF' };\r\n  height: 40px;\r\n  line-height: 40px;\r\n  padding-left: 20px;\r\n  cursor: pointer;\r\n  border-bottom: 2px solid #F7FCFF;\r\n  ${'' /* transition: all 10s;\r\n  --webkit-transition: all 10s; */}\r\n`\r\n\r\nconst SubNavigator = styled.div`\r\n  background-color: ${ props => props.active ? '#F7FCFF' : '#D6F0FF' };\r\n  height: 30px;\r\n  line-height: 30px;\r\n  padding-left: 20px;\r\n  cursor: pointer;\r\n  border-bottom: 2px solid #F7FCFF;\r\n  border-left: 20px solid #F7FCFF;\r\n`\r\n\r\nconst SubNavigatorWrapper = styled.div`\r\n  height: ${ props => props.display === 'block' ? 90 : 0 };\r\n  ${'' /* opacity: ${ props => props.display === 'block' ? 9 : 0 }; */}\r\n  position: relative;\r\n  left: ${ props => props.display === 'block' ? '0px' : `-${dashboardVar.sidebarWidthInt}px` };\r\n  ${'' /* transition: left 1s;\r\n  --webkit-transition: left 1s; */}\r\n`\r\n\r\nconst isActive = (page, matchingString) => {\r\n  if (page === matchingString)\r\n    return true\r\n  else\r\n    return false\r\n}\r\n\r\nconst display = (page, matchingString) => {\r\n  if (page === matchingString)\r\n    return 'block'\r\n  else\r\n    return 'none'\r\n}\r\n\r\nexport default (props) => {\r\n  return (\r\n    <StyledSidebar>\r\n      <Navigator\r\n        onClick={ () => props.changePage('domestic-graph') }\r\n        active={ isActive(props.page, 'domestic-graph') }\r\n      >\r\n        Domestic Internet Graph\r\n      </Navigator>\r\n      <SubNavigatorWrapper display={ display(props.page, 'domestic-graph') }>\r\n        <SubNavigator\r\n          active={ isActive(props.domesticGraphType, 'none') }\r\n          onClick={ () => props.changeDomesticGraphType('none') }\r\n        >\r\n          random position\r\n        </SubNavigator>\r\n        <SubNavigator\r\n          active={ isActive(props.domesticGraphType, 'circular') }\r\n          onClick={ () => props.changeDomesticGraphType('circular') }\r\n        >\r\n          circular\r\n        </SubNavigator>\r\n        <SubNavigator\r\n          active={ isActive(props.domesticGraphType, 'force') }\r\n          onClick={ () => props.changeDomesticGraphType('force') }\r\n        >\r\n          force\r\n        </SubNavigator>\r\n      </SubNavigatorWrapper>\r\n\r\n      <Navigator\r\n        onClick={ () => props.changePage('international-graph') }\r\n        active={ isActive(props.page, 'international-graph') }\r\n      >\r\n        International Internet Graph\r\n      </Navigator>\r\n      <SubNavigatorWrapper display={ display(props.page, 'international-graph') }>\r\n        <SubNavigator\r\n          active={ isActive(props.internationalGraphType, 'none') }\r\n          onClick={ () => props.changeInternationalGraphType('none') }\r\n        >\r\n          random position\r\n        </SubNavigator>\r\n        <SubNavigator\r\n          active={ isActive(props.internationalGraphType, 'circular') }\r\n          onClick={ () => props.changeInternationalGraphType('circular') }\r\n        >\r\n          circular\r\n        </SubNavigator>\r\n        <SubNavigator\r\n          active={ isActive(props.internationalGraphType, 'force') }\r\n          onClick={ () => props.changeInternationalGraphType('force') }\r\n        >\r\n          force\r\n        </SubNavigator>\r\n      </SubNavigatorWrapper>\r\n\r\n      <Navigator\r\n        onClick={ () => props.changePage('login-activity') }\r\n        active={ isActive(props.page, 'login-activity') }\r\n      >\r\n        Login Activity\r\n      </Navigator>\r\n\r\n      {/* <Navigator\r\n        onClick={ () => props.changePage('web-log') }\r\n        active={ isActive(props.page, 'web-log') }\r\n      >\r\n        Web Log\r\n      </Navigator>\r\n      <SubNavigatorWrapper display={ display(props.page, 'web-log') }>\r\n        <SubNavigator\r\n          active={ isActive(props.webLogSector, 'suspected-user') }\r\n          onClick={ () => props.changeWebLogSector('suspected-user') }\r\n        >\r\n          suspected user\r\n        </SubNavigator>\r\n        <SubNavigator\r\n          active={ isActive(props.webLogSector, 'timeline-connectivity') }\r\n          onClick={ () => props.changeWebLogSector('timeline-connectivity') }\r\n        >\r\n          timeline connectivity\r\n        </SubNavigator>\r\n        <SubNavigator\r\n          active={ isActive(props.webLogSector, 'most-request-host-name') }\r\n          onClick={ () => props.changeWebLogSector('most-request-host-name') }\r\n        >\r\n          most request host name\r\n        </SubNavigator>\r\n        <SubNavigator\r\n          active={ isActive(props.webLogSector, 'most-request-file-type') }\r\n          onClick={ () => props.changeWebLogSector('most-request-file-type') }\r\n        >\r\n          most request file type\r\n        </SubNavigator>\r\n      </SubNavigatorWrapper> */}\r\n\r\n    </StyledSidebar>\r\n  )\r\n}\r\n","const smallInt = 1090\r\nconst small = smallInt + 'px'\r\n\r\nconst mediumInt = 1660\r\nconst medium = mediumInt + 'px'\r\n\r\nconst suspectedUserBreakPointInt = 1350\r\nconst suspectedUserBreakPoint = suspectedUserBreakPointInt + 'px'\r\n\r\nexport default {\r\n  smallInt, small,\r\n  mediumInt, medium,\r\n  suspectedUserBreakPointInt, suspectedUserBreakPoint\r\n}\r\n","import styled from 'styled-components'\r\nimport screenSize from '../../variables/screenSize'\r\n\r\nconst LoginActivityFrame = styled.div`\r\n  background-color: #FEFEFE;\r\n  width: 100%;\r\n  height: 100%;\r\n  grid-column-start: 2;\r\n  grid-column-end: 3;\r\n  grid-row-start: 2;\r\n  grid-row-end: 3;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  grid-template-rows: repeat(3, 300px);\r\n  @media (max-width: ${ screenSize.medium }) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: repeat(5, 300px);\r\n  }\r\n  @media (max-width: ${ screenSize.small }) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(6, 300px);\r\n  }\r\n`\r\n\r\nexport default LoginActivityFrame\r\n","import userTimeSeries from '../../data/login-activity/user-timeseries'\r\n\r\nconst dateList = userTimeSeries.map(item => item[0])\r\nconst valueList = userTimeSeries.map(item => item[1])\r\n\r\nconst getUserData = () => ({\r\n  title: {\r\n    left: 'center',\r\n    text: 'Active Users'\r\n  },\r\n  tooltip: {\r\n    trigger: 'axis'\r\n  },\r\n  visualMap: {\r\n    show: false,\r\n    type: 'continuous',\r\n    seriesIndex: 0,\r\n    min: 0,\r\n    max: 200,\r\n    inRange: {\r\n        color: ['lightgrey', '#2E64B0', '#222222']\r\n    }\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    data: dateList\r\n  },\r\n  yAxis: {\r\n    type: 'value'\r\n  },\r\n  series: {\r\n    type: 'line',\r\n    data: valueList,\r\n  },\r\n  // color: ['#31ABD4']\r\n})\r\n\r\nexport default getUserData\r\n","import loginLogoutTimeSeries\r\n  from '../../data/login-activity/login-logout-timeseries'\r\n\r\nconst dateList = loginLogoutTimeSeries.map(item => item[0])\r\nconst loginValueList = loginLogoutTimeSeries.map(item => item[1])\r\nconst logoutValueList = loginLogoutTimeSeries.map(item => item[2])\r\n\r\nconst getLoginLogoutData = () => ({\r\n  title: {\r\n    left: 'center',\r\n    text: 'Login / Logout'\r\n  },\r\n  tooltip: {\r\n    trigger: 'axis'\r\n  },\r\n  legend: {\r\n    data: [\r\n      { name: 'login' , icon: 'circle'},\r\n      { name: 'logout' , icon: 'circle'},\r\n    ],\r\n    top: 30\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    data: dateList\r\n  },\r\n  yAxis: {\r\n    type: 'value'\r\n  },\r\n  series: [\r\n    {\r\n      type: 'line',\r\n      name: 'logout',\r\n      data: logoutValueList,\r\n      stack: 'myStack',\r\n      areaStyle: { normal: {} }\r\n    },\r\n    {\r\n      type: 'line',\r\n      name: 'login',\r\n      data: loginValueList,\r\n      stack: 'myStack',\r\n      areaStyle: { normal: {} }\r\n    },\r\n  ],\r\n  color: ['#40DCED', '#252B2B']\r\n})\r\n\r\nexport default getLoginLogoutData\r\n","import ipTypeTimeSeries from '../../data/login-activity/ip-type-timeseries'\r\n\r\nconst dateList = ipTypeTimeSeries.map(item => item[0])\r\nconst ipv4ValueList = ipTypeTimeSeries.map(item => item[1])\r\nconst ipv6ValueList = ipTypeTimeSeries.map(item => item[2])\r\nconst dualStackValueList = ipTypeTimeSeries.map(item => item[3])\r\n\r\nconst getIpTypeData = () => ({\r\n  title: {\r\n    left: 'center',\r\n    text: 'IP Type'\r\n  },\r\n  tooltip: {\r\n    trigger: 'axis'\r\n  },\r\n  legend: {\r\n    data: [\r\n      { name: 'ipv4' , icon: 'circle'},\r\n      { name: 'dual stack' , icon: 'circle'},\r\n      { name: 'ipv6' , icon: 'circle'},\r\n    ],\r\n    top: 30\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    data: dateList\r\n  },\r\n  yAxis: {\r\n    type: 'value'\r\n  },\r\n  series: [\r\n    {\r\n      type: 'line',\r\n      name: 'ipv6',\r\n      data: ipv6ValueList,\r\n      stack: 'myStack',\r\n      areaStyle: { normal: {} }\r\n    },\r\n    {\r\n      type: 'line',\r\n      name: 'dual stack',\r\n      data: dualStackValueList,\r\n      stack: 'myStack',\r\n      areaStyle: { normal: {} }\r\n    },\r\n    {\r\n      type: 'line',\r\n      name: 'ipv4',\r\n      data: ipv4ValueList,\r\n      stack: 'myStack',\r\n      areaStyle: { normal: {} }\r\n    },\r\n  ],\r\n  color: ['red', 'lightgrey', 'darkblue']\r\n})\r\n\r\nexport default getIpTypeData\r\n","import ipRatio from '../../data/login-activity/ip-ratio'\r\n\r\nconst ipv4Value = ipRatio.ipv4\r\nconst ipv6Value = ipRatio.ipv6\r\nconst dualStackValue = ipRatio.dualStack\r\n\r\nconst getIpRatioData = () => ({\r\n  title: {\r\n    left: 'center',\r\n    text: 'IP Ratio'\r\n  },\r\n  tooltip: {},\r\n  series: {\r\n    type: 'pie',\r\n    radius: [50, 110],\r\n    // roseType: 'radius',\r\n    data: [\r\n      { name: 'ipv4', value: ipv4Value },\r\n      { name: 'dual stack', value: dualStackValue },\r\n      { name: 'ipv6', value: ipv6Value },\r\n    ]\r\n  },\r\n  color: ['#3C86C8', '#C2F238', '#FF593B']\r\n})\r\n\r\nexport default getIpRatioData\r\n","import loginActivity from '../../data/login-activity/login-activity'\r\n\r\nconst loginValue = loginActivity.login\r\nconst reLoginValue = loginActivity.reLogin\r\nconst logoutValue = loginActivity.logout\r\nconst timeoutValue = loginActivity.timeout\r\n\r\nconst getLoginActivityData = () => ({\r\n  title: {\r\n    left: 'center',\r\n    text: 'Login Activity'\r\n  },\r\n  tooltip: {},\r\n  series: {\r\n    type: 'pie',\r\n    radius: [50, 110],\r\n    data: [\r\n      { name: 'login', value: loginValue },\r\n      { name: 'timeout', value: timeoutValue },\r\n      { name: 're-login', value: reLoginValue },\r\n      { name: 'logout', value: logoutValue },\r\n    ]\r\n  },\r\n  color: ['#6733AD', '#FE3A3A', '#2ECB2E', '#FEEC3A']\r\n})\r\n\r\nexport default getLoginActivityData\r\n","import serverDistribution from '../../data/login-activity/server-distribution'\r\n\r\nconst getServerDistributionData = () => ({\r\n  title: {\r\n    left: 'center',\r\n    text: 'Server Load Distribution'\r\n  },\r\n  tooltip: {},\r\n  series: {\r\n    type: 'pie',\r\n    radius: [50, 110],\r\n    data: [\r\n      { name: \"158.108.218.201\", value: serverDistribution[\"158.108.218.201\"] },\r\n      { name: \"158.108.218.202\", value: serverDistribution[\"158.108.218.202\"] },\r\n      { name: \"158.108.218.203\", value: serverDistribution[\"158.108.218.203\"] },\r\n      { name: \"158.108.218.204\", value: serverDistribution[\"158.108.218.204\"] },\r\n      { name: \"158.108.218.205\", value: serverDistribution[\"158.108.218.205\"] },\r\n      { name: \"158.108.218.206\", value: serverDistribution[\"158.108.218.206\"] },\r\n      { name: \"158.108.218.207\", value: serverDistribution[\"158.108.218.207\"] },\r\n      { name: \"158.108.218.208\", value: serverDistribution[\"158.108.218.208\"] },\r\n      { name: \"158.108.218.209\", value: serverDistribution[\"158.108.218.209\"] },\r\n      { name: \"158.108.218.210\", value: serverDistribution[\"158.108.218.210\"] },\r\n      { name: \"158.108.218.211\", value: serverDistribution[\"158.108.218.211\"] },\r\n      { name: \"158.108.218.212\", value: serverDistribution[\"158.108.218.212\"] },\r\n    ]\r\n  },\r\n  color: [\r\n    '#AD28A2', '#6733AD', '#3D40B1', '#2E71A4', '#28B16F', '#83E234',\r\n    '#D5F638', '#FEEC3A', '#FECD3A', '#FEA93A', '#FE723A', '#E2346C'\r\n  ]\r\n})\r\n\r\nexport default getServerDistributionData\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nimport LoginActivityFrame from './styled/LoginActivityFrame'\r\nimport getUserData from '../get-data/login-activity/getUserData'\r\nimport getLoginLogoutData from '../get-data/login-activity/getLoginLogoutData'\r\nimport getIpTypeData from '../get-data/login-activity/getIpTypeData'\r\nimport getIpRatioData from '../get-data/login-activity/getIpRatioData'\r\nimport getLoginActivityData\r\n  from '../get-data/login-activity/getLoginActivityData'\r\nimport getServerDistributionData\r\n  from '../get-data/login-activity/getServerDistributionData'\r\n\r\nimport screenSize from '../variables/screenSize'\r\nimport dashboardVar from '../variables/dashboardVar'\r\n\r\nconst ActiveUserFormat = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  @media (min-width: ${ screenSize.medium }) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 7;\r\n  }\r\n  @media (max-width: ${ screenSize.medium }) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 3;\r\n  }\r\n  @media (max-width: ${ screenSize.small }) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 3;\r\n  }\r\n`\r\n\r\nconst IpTypeFormat = styled.div`\r\nwidth: 100%;\r\nheight: 100%;\r\n@media (min-width: ${ screenSize.medium }) {\r\n  grid-column-start: 1;\r\n  grid-column-end: 4;\r\n}\r\n@media (max-width: ${ screenSize.medium }) {\r\n  grid-column-start: 1;\r\n  grid-column-end: 3;\r\n}\r\n@media (max-width: ${ screenSize.small }) {\r\n  grid-column-start: 1;\r\n  grid-column-end: 2;\r\n}\r\n`\r\n\r\nconst LoginLogoutFormat = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  @media (min-width: ${ screenSize.medium }) {\r\n    grid-column-start: 4;\r\n    grid-column-end: 7;\r\n  }\r\n  @media (max-width: ${ screenSize.medium }) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 3;\r\n  }\r\n  @media (max-width: ${ screenSize.small }) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 2;\r\n  }\r\n`\r\n\r\nconst IpRatioFormat = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  @media (min-width: ${ screenSize.medium }) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 3;\r\n  }\r\n  @media (max-width: ${ screenSize.medium }) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 2;\r\n  }\r\n  @media (max-width: ${ screenSize.small }) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 2;\r\n  }\r\n`\r\n\r\nconst LoginActivityFormat = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  @media (min-width: ${ screenSize.medium }) {\r\n    grid-column-start: 3;\r\n    grid-column-end: 5;\r\n  }\r\n  @media (max-width: ${ screenSize.medium }) {\r\n    grid-column-start: 2;\r\n    grid-column-end: 3;\r\n  }\r\n  @media (max-width: ${ screenSize.small }) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 2;\r\n  }\r\n`\r\n\r\nconst ServerDistributionFormat = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  @media (min-width: ${ screenSize.medium }) {\r\n    grid-column-start: 5;\r\n    grid-column-end: 7;\r\n  }\r\n  @media (max-width: ${ screenSize.medium }) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 3;\r\n  }\r\n  @media (max-width: ${ screenSize.small }) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 2;\r\n  }\r\n`\r\n\r\nconst calWidthActiveUser = windowWidth => {\r\n  if (!windowWidth)\r\n    return '100%'\r\n  const adjustedWidth = windowWidth - dashboardVar.sidebarWidthInt\r\n  return adjustedWidth\r\n}\r\n\r\nconst calWidthIpTypeIpLoginLogout = windowWidth => {\r\n  if (!windowWidth)\r\n    return '100%'\r\n  const adjustedWidth = windowWidth - dashboardVar.sidebarWidthInt\r\n  // console.log(windowWidth, screenSize.mediumInt)\r\n  if (windowWidth <= screenSize.mediumInt)\r\n    return adjustedWidth\r\n  else\r\n    return adjustedWidth / 2\r\n}\r\n\r\nconst calWidthIpRatioLoginActivity = windowWidth => {\r\n  if (!windowWidth)\r\n    return '100%'\r\n  const adjustedWidth = windowWidth - dashboardVar.sidebarWidthInt\r\n  if (windowWidth <= screenSize.smallInt)\r\n    return adjustedWidth\r\n  else if (windowWidth <= screenSize.mediumInt)\r\n    return adjustedWidth / 2\r\n  else\r\n    return adjustedWidth / 3\r\n}\r\n\r\nconst calWidthServerDistribution = windowWidth => {\r\n  if (!windowWidth)\r\n    return '100%'\r\n  const adjustedWidth = windowWidth - dashboardVar.sidebarWidthInt\r\n  if (windowWidth <= screenSize.smallInt)\r\n    return adjustedWidth\r\n  else if (windowWidth <= screenSize.mediumInt)\r\n    return adjustedWidth\r\n  else\r\n    return adjustedWidth / 3\r\n}\r\n\r\nconst LoginActivity = props => {\r\n  return (\r\n    <LoginActivityFrame>\r\n      <ActiveUserFormat>\r\n        <ReactEcharts\r\n          option={ getUserData() }\r\n          style={{\r\n            height: '100%',\r\n            width: calWidthActiveUser(props.width)\r\n          }}\r\n        />\r\n      </ActiveUserFormat>\r\n      <IpTypeFormat>\r\n        <ReactEcharts\r\n          option={ getIpTypeData() }\r\n          style={{\r\n            height: '100%',\r\n            width: calWidthIpTypeIpLoginLogout(props.width)\r\n          }}\r\n        />\r\n      </IpTypeFormat>\r\n      <LoginLogoutFormat>\r\n        <ReactEcharts\r\n          option={ getLoginLogoutData() }\r\n          style={{\r\n            height: '100%',\r\n            width: calWidthIpTypeIpLoginLogout(props.width)\r\n          }}\r\n        />\r\n      </LoginLogoutFormat>\r\n      <IpRatioFormat>\r\n        <ReactEcharts\r\n          option={ getIpRatioData() }\r\n          style={{\r\n            height: '100%',\r\n            width: calWidthIpRatioLoginActivity(props.width)\r\n          }}\r\n        />\r\n      </IpRatioFormat>\r\n      <LoginActivityFormat>\r\n        <ReactEcharts\r\n          option={ getLoginActivityData() }\r\n          style={{\r\n            height: '100%',\r\n            width: calWidthIpRatioLoginActivity(props.width)\r\n          }}\r\n        />\r\n      </LoginActivityFormat>\r\n      <ServerDistributionFormat>\r\n        <ReactEcharts\r\n          option={ getServerDistributionData() }\r\n          style={{\r\n            height: '100%',\r\n            width: calWidthServerDistribution(props.width)\r\n          }}\r\n        />\r\n      </ServerDistributionFormat>\r\n    </LoginActivityFrame>\r\n  )\r\n}\r\n\r\nexport default LoginActivity\r\n","import styled from 'styled-components'\r\n\r\nconst GraphFrame = styled.div`\r\n  background-color: #FEFEFE;\r\n  width: 100%;\r\n  height: 100%;\r\n  grid-column-start: 2;\r\n  grid-column-end: 3;\r\n  grid-row-start: 2;\r\n  grid-row-end: 3;\r\n`\r\n\r\nexport default GraphFrame\r\n","import InternationalExchage\r\n  from '../../data/internet-graph/International_Exchange'\r\n\r\nvar category_from_isp_type = {\r\n  'ISP-Inter': 0,\r\n  'ISP-Local': 1,\r\n  'ISP-Govt': 2,\r\n  'IIG': 3\r\n}\r\nvar categories_list = [\r\n  { name: 'ISP-Inter', itemStyle: { color: '#0E91C9'} },\r\n  { name: 'ISP-Local', itemStyle: { color: '#60D1AA'} },\r\n  { name: 'ISP-Govt', itemStyle: { color: '#ED4747'} },\r\n  { name: 'IIG', itemStyle: { color: '#DEDB7A'} },\r\n]\r\n\r\nconst getInternationalGraphData = graphType => ({\r\n  title: {\r\n      text: 'International Internet Graph',\r\n      left: 'center'\r\n  },\r\n  animationDurationUpdate: 1500,\r\n  animationEasingUpdate: 'quinticInOut',\r\n  legend: {\r\n    top: 30,\r\n    data: categories_list\r\n  },\r\n  series : [\r\n      {\r\n          type: 'graph',\r\n          layout: graphType,\r\n          // layout: 'circular',\r\n          draggable: true,\r\n          // progressiveThreshold: 700,\r\n          categories: categories_list,\r\n          data: InternationalExchage.nodes.map(function (node) {\r\n              return {\r\n                  x: node.x,\r\n                  y: node.y,\r\n                  id: node.id,\r\n                  // name: node.label,\r\n                  name: node.name,\r\n                  category: category_from_isp_type[node.ispType],\r\n                  symbolSize: node.size,\r\n                  itemStyle: {\r\n                      normal: {\r\n                          color: node.colorByType\r\n                          // color: node.color\r\n                      }\r\n                  }\r\n              };\r\n          }),\r\n          edges: InternationalExchage.edges.map(function (edge) {\r\n              return {\r\n                  source: edge.sourceID,\r\n                  target: edge.targetID,\r\n                  lineStyle: {\r\n                    width: Number(Math.pow(edge.size, 1/2.5)) < 1 ?\r\n                      1 : Number(Math.pow(edge.size, 1/2.5))\r\n                  }\r\n              };\r\n          }),\r\n          label: {\r\n              emphasis: {\r\n                  position: 'right',\r\n                  show: true\r\n              }\r\n          },\r\n          roam: true,\r\n          focusNodeAdjacency: true,\r\n          lineStyle: {\r\n              normal: {\r\n                  width: 0.4,\r\n                  curveness: 0.07,\r\n                  opacity: 0.24\r\n              }\r\n          },\r\n          force: {\r\n            repulsion: 500\r\n          }\r\n      }\r\n  ]\r\n})\r\n\r\nexport default getInternationalGraphData\r\n","import React from 'react'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nimport GraphFrame from './styled/GraphFrame'\r\nimport getInternationalGraphData\r\n  from '../get-data/internet-graph/getInternationalGraphData'\r\n\r\nimport dashboardVar from '../variables/dashboardVar'\r\n\r\nconst calWidth = windowWidth => {\r\n  if (!windowWidth)\r\n    return '100%'\r\n  const adjustedWidth = windowWidth - dashboardVar.sidebarWidthInt\r\n  return adjustedWidth\r\n}\r\n\r\nconst InternationalGraph = props => {\r\n  return (\r\n    <GraphFrame>\r\n      <ReactEcharts\r\n        option={ getInternationalGraphData(props.graphType) }\r\n        style={{\r\n          height: '100%',\r\n          width: calWidth(props.width)\r\n        }}\r\n      />\r\n    </GraphFrame>\r\n  )\r\n}\r\n\r\nexport default InternationalGraph\r\n","import DomesticExchage\r\n  from '../../data/internet-graph/Domestic_Exchange'\r\n\r\nvar category_from_isp_type = {\r\n  'NIX': 0,\r\n  'ISP-Local': 1,\r\n  'ISP-Govt': 2,\r\n  'IIG': 3,\r\n  // 'Gov.': 4\r\n}\r\n\r\nvar categories_list = [\r\n  { name: 'NIX', itemStyle: { color: '#D775F0'} },\r\n  { name: 'ISP-Local', itemStyle: { color: '#60D1AA'} },\r\n  { name: 'ISP-Govt', itemStyle: { color: '#ED4747'} },\r\n  { name: 'IIG', itemStyle: { color: '#DEDB7A'} },\r\n  // { name: 'Gov.', itemStyle: { color: '#E6F075'} },\r\n]\r\n\r\nconst getDomesticGraphData = graphType => ({\r\n  title: {\r\n      text: 'Domestic Internet Graph',\r\n      left: 'center'\r\n  },\r\n  animationDurationUpdate: 1500,\r\n  animationEasingUpdate: 'quinticInOut',\r\n  legend: {\r\n    top: 30,\r\n    data: categories_list\r\n  },\r\n  series : [\r\n      {\r\n          type: 'graph',\r\n          layout: graphType,\r\n          // layout: 'none',\r\n          draggable: true,\r\n          // progressiveThreshold: 700,\r\n          categories: categories_list,\r\n          data: DomesticExchage.nodes.map(function (node) {\r\n            // console.log(node.colorByType)\r\n              return {\r\n                  x: node.x,\r\n                  y: node.y,\r\n                  id: node.id,\r\n                  // name: node.label,\r\n                  name: node.name,\r\n                  category: category_from_isp_type[node.ispType],\r\n                  symbolSize: Number(node.size) * 3,\r\n                  itemStyle: {\r\n                      normal: {\r\n                          color: node.colorByType\r\n                          // color: node.color\r\n                      }\r\n                  }\r\n              };\r\n          }),\r\n          edges: DomesticExchage.edges.map(function (edge) {\r\n              return {\r\n                  source: edge.sourceID,\r\n                  target: edge.targetID,\r\n                  lineStyle: {\r\n                    width: Number(Math.pow(edge.size, 1/2.5)) < 1 ?\r\n                      1 : Number(Math.pow(edge.size, 1/2.5))\r\n                  }\r\n              };\r\n          }),\r\n          label: {\r\n              emphasis: {\r\n                  position: 'right',\r\n                  show: true\r\n              }\r\n          },\r\n          roam: true,\r\n          focusNodeAdjacency: true,\r\n          lineStyle: {\r\n              normal: {\r\n                  width: 0.4,\r\n                  curveness: 0.07,\r\n                  opacity: 0.24\r\n              }\r\n          },\r\n          force: {\r\n            repulsion: 5500\r\n          }\r\n      }\r\n  ]\r\n})\r\n\r\nexport default getDomesticGraphData\r\n","import React from 'react'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nimport GraphFrame from './styled/GraphFrame'\r\nimport getDomesticGraphData\r\n  from '../get-data/internet-graph/getDomesticGraphData'\r\n\r\nimport dashboardVar from '../variables/dashboardVar'\r\n\r\nconst calWidth = windowWidth => {\r\n  if (!windowWidth)\r\n    return '100%'\r\n  const adjustedWidth = windowWidth - dashboardVar.sidebarWidthInt\r\n  return adjustedWidth\r\n}\r\n\r\nconst DomesticGraph = props => {\r\n  return (\r\n    <GraphFrame>\r\n      <ReactEcharts\r\n        option={ getDomesticGraphData(props.graphType) }\r\n        style={{\r\n          height: '100%',\r\n          width: calWidth(props.width)\r\n        }}\r\n      />\r\n    </GraphFrame>\r\n  )\r\n}\r\n\r\nexport default DomesticGraph\r\n","import styled from 'styled-components'\r\nimport screenSize from '../../variables/screenSize'\r\n\r\nconst SuspectedUserFrame = styled.div`\r\n  background-color: #FEFEFE;\r\n  width: 100%;\r\n  height: 100%;\r\n  grid-column-start: 2;\r\n  grid-column-end: 3;\r\n  grid-row-start: 2;\r\n  grid-row-end: 3;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: 1fr;\r\n  @media (max-width: ${ screenSize.suspectedUserBreakPoint }) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 300px auto;\r\n  }\r\n`\r\n\r\nexport default SuspectedUserFrame\r\n","import requestPerMinute from '../../data/web-log/request_per_minute_3.1'\r\n\r\nconst dateList = requestPerMinute.map(item => item[0])\r\nconst valueList = requestPerMinute.map(item => item[1])\r\n\r\nconst getRequestPerMinuteData = () => ({\r\n  title: {\r\n    left: 'center',\r\n    text: 'Requests Per Minute'\r\n  },\r\n  tooltip: {\r\n    trigger: 'axis'\r\n  },\r\n  visualMap: {\r\n    show: false,\r\n    type: 'continuous',\r\n    seriesIndex: 0,\r\n    min: 0,\r\n    max: 6000,\r\n    inRange: {\r\n        color: ['lightgrey', '#2E64B0', '#222222']\r\n    }\r\n  },\r\n  xAxis: {\r\n    type: 'category',\r\n    data: dateList\r\n  },\r\n  yAxis: {\r\n    type: 'value'\r\n  },\r\n  series: {\r\n    type: 'line',\r\n    data: valueList,\r\n  },\r\n  // color: ['#31ABD4']\r\n})\r\n\r\nexport default getRequestPerMinuteData\r\n","import styled from 'styled-components'\r\n\r\nconst TimelineConnectivityFrame = styled.div`\r\n  background-color: #FEFEFE;\r\n  width: 100%;\r\n  height: 100%;\r\n  grid-column-start: 2;\r\n  grid-column-end: 3;\r\n  grid-row-start: 2;\r\n  grid-row-end: 3;\r\n`\r\n\r\nexport default TimelineConnectivityFrame\r\n","import timeline from '../../data/web-log/timeline_3.2'\r\n\r\nconst user_count = {}\r\nconst ip_source_count = {}\r\nconst ip_destination_count = {}\r\nconst hostname_count = {}\r\ntimeline.forEach(item => {\r\n  const user = item[1]\r\n  const ip_source = item[2]\r\n  const ip_destination = item[3]\r\n  const hostname = item[5]\r\n  if (!user_count[user])\r\n    user_count[user] = 1\r\n  else\r\n    user_count[user]++\r\n\r\n  if (!ip_source_count[ip_source])\r\n    ip_source_count[ip_source] = 1\r\n  else\r\n    ip_source_count[ip_source]++\r\n\r\n  if (!ip_destination_count[ip_destination])\r\n    ip_destination_count[ip_destination] = 1\r\n  else\r\n    ip_destination_count[ip_destination]++\r\n\r\n  if (!hostname_count[hostname])\r\n    hostname_count[hostname] = 1\r\n  else\r\n    hostname_count[hostname]++\r\n})\r\n\r\nconst user_count_array = []\r\nconst ip_source_count_array = []\r\nconst ip_destination_count_array = []\r\nconst hostname_count_array = []\r\nfor (let user in user_count) {\r\n  user_count_array.push([user, user_count[user]])\r\n}\r\nfor (let ip_source in ip_source_count) {\r\n  ip_source_count_array.push([ip_source, ip_source_count[ip_source]])\r\n}\r\nfor (let ip_destination in ip_destination_count) {\r\n  ip_destination_count_array.push([ip_destination, ip_destination_count[ip_destination]])\r\n}\r\nfor (let hostname in hostname_count) {\r\n  hostname_count_array.push([hostname, hostname_count[hostname]])\r\n}\r\n\r\nconst sorted_user_count_array = user_count_array.sort((a,b) => b[1] - a[1])\r\nconst sorted_ip_source_count_array = ip_source_count_array.sort((a,b) => b[1] - a[1])\r\nconst sorted_ip_destination_count_array = ip_destination_count_array.sort((a,b) => b[1] - a[1])\r\nconst sorted_hostname_count_array = hostname_count_array.sort((a,b) => b[1] - a[1])\r\n\r\nconst top = 15\r\nconst uniqUsername = sorted_user_count_array.map(item => item[0]).slice(0, top)\r\nconst uniqIpSource = sorted_ip_source_count_array.map(item => item[0])\r\nconst uniqIpDestination= sorted_ip_destination_count_array.map(item => item[0])\r\nconst uniqHostname = sorted_hostname_count_array.map(item => item[0])\r\n\r\nconsole.log(uniqUsername)\r\nconst arrayToObject = array => {\r\n  const object = {}\r\n  array.forEach(item => {\r\n    object[item] = true\r\n  })\r\n  return object\r\n}\r\nconst username_dictionary = arrayToObject(uniqUsername)\r\nconst ip_source_dictionary = arrayToObject(uniqIpSource)\r\nconst ip_destination_dictionary = arrayToObject(uniqIpDestination)\r\nconst hostname_dictionary = arrayToObject(uniqHostname)\r\n\r\nconst newTimeline = timeline.map(item => {\r\n  const time = item[0]\r\n  const username = item[1]\r\n  const ipSource = item[2]\r\n  const ipDestination = item[3]\r\n  const port = item[4]\r\n  const hostname = item[5]\r\n  if(username_dictionary[username] && ip_source_dictionary[ipSource]\r\n    && ip_destination_dictionary[ipDestination]\r\n    && hostname_dictionary[hostname]) {\r\n      return [time/1000, username, ipSource, ipDestination, String(port), hostname]\r\n    }\r\n})\r\n\r\n// const uniqIpSource = [ ...new Set(timeline.map(item => item[2])) ]\r\n// const uniqIpDestination = [ ...new Set(timeline.map(item => item[3])) ]\r\nconst uniqPorts = [ ...new Set(timeline.map(item => item[4])) ]\r\n// const uniqHostname = [ ...new Set(timeline.map(item => item[5])) ]\r\n\r\n// const newTimeline = timeline.map(item => {\r\n//   return [item[0]/1000, item[1], item[2], item[3], String(item[4]), item[5]]\r\n// })\r\n\r\nconst getTimelineData = () => ({\r\n  title: {\r\n    left: 'center',\r\n    text: 'Timeline Connectivity at 3:00AM (top 20 users)'\r\n  },\r\n  parallelAxis: [\r\n    { dim: 0, name: 'Time (milli second)' },\r\n    { dim: 1, name: 'Username', type: 'category', data: uniqUsername },\r\n    { dim: 2, name: 'IP Source', type: 'category', data: uniqIpSource },\r\n    { dim: 3, name: 'IP Destination', type: 'category', data: uniqIpDestination },\r\n    { dim: 4, name: 'Port Destination', type: 'category', data: uniqPorts.sort((a,b) => a - b) },\r\n    { dim: 5, name: 'Hostname', type: 'category', data: uniqHostname },\r\n  ],\r\n  parallel: {\r\n    right: 250\r\n  },\r\n  series: {\r\n    type: 'parallel',\r\n    data: newTimeline,\r\n    lineStyle: {\r\n      color: '#31A6E0',\r\n      opacity: 1\r\n    },\r\n    // emphasis: {\r\n    //   lineStyle: {\r\n    //     color: 'red'\r\n    //   }\r\n    // },\r\n    inactiveOpacity: 0.01\r\n  },\r\n})\r\n\r\nexport default getTimelineData\r\n","import styled from 'styled-components'\r\nimport screenSize from '../../variables/screenSize'\r\n\r\nconst SuspectedUserFrame = styled.div`\r\n  background-color: #FEFEFE;\r\n  width: 100%;\r\n  height: 100%;\r\n  grid-column-start: 2;\r\n  grid-column-end: 3;\r\n  grid-row-start: 2;\r\n  grid-row-end: 3;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: 1fr;\r\n  @media (max-width: ${ screenSize.suspectedUserBreakPoint }) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(2, 1fr);\r\n  }\r\n`\r\n\r\nexport default SuspectedUserFrame\r\n","import React, { Component } from 'react'\r\n\r\nimport DashboardFrame from './styled/DashboardFrame'\r\nimport Navbar from '../components/Navbar'\r\nimport Sidebar from '../components/Sidebar'\r\nimport LoginActivity from '../components/LoginActivity'\r\nimport InternationalGraph from '../components/InternationalGraph'\r\nimport DomesticGraph from '../components/DomesticGraph'\r\nimport SuspectedUser from '../components/SuspectedUser'\r\nimport TimelineConnectivity from '../components/TimelineConnectivity'\r\nimport MostRequestHostName from '../components/MostRequestHostName'\r\nimport MostRequestFiletype from '../components/MostRequestFiletype'\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      page: 'domestic-graph',\r\n      domesticGraphType: 'none',\r\n      internationalGraphType: 'circular',\r\n      webLogSector: 'suspected-user'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateWidth)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWidth)\r\n  }\r\n\r\n  updateWidth = () => {\r\n    const width = window.innerWidth\r\n    const height = window.innerHeight\r\n    this.setState({ width, height })\r\n  }\r\n\r\n  changePage = page => {\r\n    this.setState({\r\n      page,\r\n      domesticGraphType: 'none',\r\n      internationalGraphType: 'circular'\r\n    })\r\n  }\r\n\r\n  changeDomesticGraphType = graphType => {\r\n    this.setState({ domesticGraphType: graphType })\r\n  }\r\n\r\n  changeInternationalGraphType = graphType => {\r\n    this.setState({ internationalGraphType: graphType })\r\n  }\r\n\r\n  changeWebLogSector = sector => {\r\n    this.setState({ webLogSector: sector })\r\n  }\r\n\r\n  renderPage = (width, height) => {\r\n    switch (this.state.page) {\r\n      case 'domestic-graph':\r\n        return (\r\n          <DomesticGraph\r\n            width={ width }\r\n            graphType={ this.state.domesticGraphType }\r\n          />\r\n        )\r\n      case 'international-graph':\r\n        return (\r\n          <InternationalGraph\r\n            width={ width }\r\n            graphType={ this.state.internationalGraphType }\r\n          />\r\n        )\r\n      case 'login-activity':\r\n        return <LoginActivity width={ width } />\r\n      // case 'web-log':\r\n      //   switch (this.state.webLogSector) {\r\n      //     case 'suspected-user':\r\n      //       return <SuspectedUser width={ width }/>\r\n      //     case 'timeline-connectivity':\r\n      //       return <TimelineConnectivity width={ width } />\r\n      //     case 'most-request-host-name':\r\n      //       return <MostRequestHostName width={ width } height={ height }/>\r\n      //     case 'most-request-file-type':\r\n      //       return <MostRequestFiletype width={ width } height={ height } />\r\n      //     default:\r\n      //       return <SuspectedUser width={ width } />\r\n      //   }\r\n      // default:\r\n      //   return <DomesticGraph width={ width } />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DashboardFrame>\r\n        <Navbar />\r\n        <Sidebar\r\n          page={ this.state.page }\r\n          changePage={ this.changePage }\r\n          domesticGraphType={ this.state.domesticGraphType }\r\n          internationalGraphType={ this.state.internationalGraphType }\r\n          changeDomesticGraphType={ this.changeDomesticGraphType }\r\n          changeInternationalGraphType={ this.changeInternationalGraphType }\r\n          webLogSector={ this.state.webLogSector }\r\n          changeWebLogSector={ this.changeWebLogSector }\r\n        />\r\n        { this.renderPage(this.state.width, this.state.height) }\r\n      </DashboardFrame>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport './App.css';\nimport Dashboard from './containers/Dashboard'\n\nclass App extends Component {\n  render() {\n    return (\n      // <BrowserRouter>\n      //   <Switch>\n      //     <Route path='/' component={Dashboard} />\n      //   </Switch>\n      // </BrowserRouter>\n      <Dashboard />\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}